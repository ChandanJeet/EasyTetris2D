#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec2 vertexPosition_modelspace;
layout (location = 1) in vec3 aargb;

uniform vec2 movement;
out vec4 vertexColor;

void main(){
    gl_Position.w = 1.0;
    gl_Position.x = vertexPosition_modelspace.x/300.0f + movement.x/300.0f;
    gl_Position.y = vertexPosition_modelspace.y/450.0f + movement.y/450.0f;
    vertexColor = vec4(aargb.rgb, 1);
}

